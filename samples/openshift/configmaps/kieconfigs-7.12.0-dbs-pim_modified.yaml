kind: ConfigMap
apiVersion: v1
metadata:
  annotations:
    app.kiegroup.org: 7.12.0
  name: kieconfigs-7.12.0-dbs-pim
  ownerReferences:
    - apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      name: businessautomation-operator.7.12.0-2
      controller: false
      blockOwnerDeletion: false
  labels:
    operators.coreos.com/businessautomation-operator.unicredit-7-12: ''
data:
  external.yaml: |
    ## KIE ProcessMigration BEGIN
    processMigration:
      ## KIE ProcessMigration ConfigMap BEGIN
      configMaps:
        - metadata:
            name: "[[.ApplicationName]]-process-migration"
          data:
            application.yaml: |-
              # Default pim configuration for external databases.
              quarkus:
                class-loading:
                  # be sure to remove the target database from here.
                  removed-artifacts: com.oracle.database.jdbc:ojdbc8,com.ibm.db2:jcc,com.microsoft.sqlserver:mssql-jdbc
                package:
                  type: mutable-jar
                  user-providers-directory: providers
                http:
                  auth:
                    basic: true
                    policy:
                      main-policy:
                        roles-allowed: admin
                    permission:
                      main:
                        paths: /*
                        policy: main-policy
                      public:
                        paths: /q/health/*
                        policy: permit
                        methods: GET
                security:
                  users:
                    file:
                      realm-name: pim-file
                      enabled: true
                      plain-text: false
                      users: /opt/rhpam-process-migration/quarkus-app/config/application-users.properties
                      roles: /opt/rhpam-process-migration/quarkus-app/config/application-roles.properties
                  jdbc:
                    realm-name: pim-jdbc
                    enabled: true
                    principal-query:
                      sql: SELECT u.password, u.role FROM users u WHERE u.username=?
                  ldap:
                    realm-name:  pim-ldap
                    enabled: true
                    direct-verification: true
                    dir-context:
                      url: 'ldap://my-ldap.example.com:389'
                      principal: 'uid=admin,ou=system'
                      password: secret
                    identity-mapping:
                      rdn-identifier: uid
                      search-base-dn: 'ou=people,o=SevenSeas'
                      search-recursive: true
                    attribute-mappings:
                      "attribute-mappings":
                        from: cn
                        to: groups
                        filter: 'uniquemember={1}'
                        filter-base-dn: 'ou=groups,o=sevenSeas'  
                # Flyway to create PIM schema
                flyway:
                  connect-retries: 10
                  table: flyway_pim_history
                  migrate-at-start: true
                  baseline-on-migrate: true
                  baseline-version: 1.0
                  baseline-description: PimDB
                  sql-migration-prefix: [[.ProcessMigration.Database.ExternalConfig.Driver]]
                # Quartz configuration
                quartz:
                  store-type: jdbc-cmt
                  start-mode: forced
                resteasy:
                  path: /rest
                datasource:
                  # see all supported databases here https://quarkus.io/guides/datasource
                  db-kind: [[.ProcessMigration.Database.ExternalConfig.Driver]]
                  jdbc:
                    url: [[.ProcessMigration.Database.ExternalConfig.JdbcURL]]
                    #[[if .ProcessMigration.Database.ExternalConfig.MaxPoolSize]]
                    max-size: [[.ProcessMigration.Database.ExternalConfig.MaxPoolSize]]
                    #[[end]]
                    #[[if .ProcessMigration.Database.ExternalConfig.MinPoolSize]]
                    min-size: [[.ProcessMigration.Database.ExternalConfig.MinPoolSize]]
                    #[[end]]
                  username: [[.ProcessMigration.Database.ExternalConfig.Username]]
                  password: [[.ProcessMigration.Database.ExternalConfig.Password]]
                hibernate-orm:
                  database:
                    generation: validate
              pim:
                auth-method: file
              kieservers:
                #[[range $index, $Map := .ProcessMigration.KieServerClients]]
                - host: [[.Host]]
                  username: [[.Username]]
                  password: [[.Password]]
                #[[end]]
            application-users.properties: |-
              # set the following spec to autogenerated this file content, if you want to provide your own properties file
              # override this file's content.
              # spec:
              #  objects:
              #    processMigration:
              #      username: pimAdmin
              #      password: somePasswordThatWillBeConvertedToMD5
              # to generate password use:  echo -n "username:pim-file:password" | openssl md5
              # pim-file is the realm defined on the application.yaml config-map;
              [[.ProcessMigration.Username]]=[[.ProcessMigration.Password]]
            application-roles.properties: |-
              [[.ProcessMigration.Username]]=admin
      ## KIE ProcessMigration ConfigMap END
    ## KIE ProcessMigration END
  mysql.yaml: |
    ## KIE ProcessMigration BEGIN
    processMigration:
      ## KIE ProcessMigration Deployment config BEGIN
      deploymentConfigs:
        - metadata:
            name: "[[.ApplicationName]]-process-migration"
          spec:
            template:
              spec:
                initContainers:
                  - command:
                      [
                        "/bin/bash",
                        "-c",
                        ">-
                        replicas=$(oc get dc [[.ApplicationName]]-process-migration-mysql -o=jsonpath='{.status.availableReplicas}'); until '[' $replicas -gt 0 ']'; do echo waiting for [[.ApplicationName]]-process-migration-mysql; replicas=$(oc get dc [[.ApplicationName]]-process-migration-mysql -o=jsonpath='{.status.availableReplicas}'); sleep 2; done;",
                      ]
                    image: "[[$.Constants.OseCliImageURL]]"
                    imagePullPolicy: IfNotPresent
                    name: "[[.ApplicationName]]-process-migration-mysql-init"
                    terminationMessagePolicy: FallbackToLogsOnError
                containers:
                  - name: "[[.ApplicationName]]-process-migration"
      ## KIE ProcessMigration Deployment config END
      ## KIE ProcessMigration ConfigMap BEGIN
      configMaps:
        - metadata:
            name: "[[.ApplicationName]]-process-migration"
          data:
            application.yaml: |-
              # Default pim configuration for managed by this operator mysql/mariadb sql servers
              quarkus:
                class-loading:
                  removed-artifacts: com.oracle.database.jdbc:ojdbc8,com.ibm.db2:jcc,com.microsoft.sqlserver:mssql-jdbc
                package:
                  type: mutable-jar
                  user-providers-directory: providers
                http:
                  auth:
                    basic: true
                    policy:
                      main-policy:
                        roles-allowed: admin
                    permission:
                      main:
                        paths: /*
                        policy: main-policy
                      public:
                        paths: /q/health/*
                        policy: permit
                        methods: GET
                security:
                  users:
                    file:
                      realm-name: pim-file
                      enabled: true
                      plain-text: false
                      users: /opt/rhpam-process-migration/quarkus-app/config/application-users.properties
                      roles: /opt/rhpam-process-migration/quarkus-app/config/application-roles.properties
                  jdbc:
                    realm-name: pim-jdbc
                    enabled: true
                    principal-query:
                      sql: SELECT u.password, u.role FROM users u WHERE u.username=?
                  ldap:
                    realm-name:  pim-ldap
                    enabled: true
                    direct-verification: true
                    dir-context:
                      url: 'ldap://my-ldap.example.com:389'
                      principal: 'uid=admin,ou=system'
                      password: secret
                    identity-mapping:
                      rdn-identifier: uid
                      search-base-dn: 'ou=people,o=SevenSeas'
                      search-recursive: true
                    attribute-mappings:
                      "attribute-mappings":
                        from: cn
                        to: groups
                        filter: 'uniquemember={1}'
                        filter-base-dn: 'ou=groups,o=sevenSeas'  
                # Flyway to create PIM schema
                flyway:
                  connect-retries: 10
                  table: flyway_pim_history
                  migrate-at-start: true
                  baseline-on-migrate: true
                  baseline-version: 1.0
                  baseline-description: PimDB
                  sql-migration-prefix: mariadb
                # Quartz configuration
                quartz:
                  store-type: jdbc-cmt
                  start-mode: forced
                resteasy:
                  path: /rest
                datasource:
                  # if the backend database is mysql, just update the kind the url
                  db-kind: mariadb
                  jdbc:
                    url: jdbc:mariadb://[[.ApplicationName]]-process-migration-mysql:3306/pimdb?useUnicode=true&useSSL=false&serverTimezone=UTC
                  username: pim
                  password: [[$.DBPassword]]
                hibernate-orm:
                  database:
                    generation: validate
              pim:
                auth-method: file
              kieservers:
                #[[range $index, $Map := .ProcessMigration.KieServerClients]]
                - host: [[.Host]]
                  username: [[.Username]]
                  password: [[.Password]]
                #[[end]]
            application-users.properties: |-
              # set the following spec to autogenerated this file content, if you want to provide your own properties file
              # override this file's content.
              # spec:
              #  objects:
              #    processMigration:
              #      username: pimAdmin
              #      password: somePasswordThatWillBeConvertedToMD5
              # to generate password use:  echo -n "username:pim-file:password" | openssl md5
              # pim-file is the realm defined on the application.yaml config-map;
              [[.ProcessMigration.Username]]=[[.ProcessMigration.Password]]
            application-roles.properties: |-
              [[.ProcessMigration.Username]]=admin
      ## KIE ProcessMigration ConfigMap END
    ## KIE ProcessMigration END
  postgresql.yaml: |
    ## KIE ProcessMigration BEGIN
    processMigration:
      ## KIE ProcessMigration Deployment config BEGIN
      deploymentConfigs:
        - metadata:
            name: "[[.ApplicationName]]-process-migration"
          spec:
            template:
              spec:
                initContainers:
                  - command:
                      [
                        "/bin/bash",
                        "-c",
                        ">-
                        replicas=$(oc get dc [[.ApplicationName]]-process-migration-postgresql -o=jsonpath='{.status.availableReplicas}'); until '[' $replicas -gt 0 ']'; do echo waiting for [[.ApplicationName]]-process-migration-postgresql; replicas=$(oc get dc [[.ApplicationName]]-process-migration-postgresql -o=jsonpath='{.status.availableReplicas}'); sleep 2; done;",
                      ]
                    image: "[[$.Constants.OseCliImageURL]]"
                    imagePullPolicy: IfNotPresent
                    name: "[[.ApplicationName]]-process-migration-postgresql-init"
                    terminationMessagePolicy: FallbackToLogsOnError
                containers:
                  - name: "[[.ApplicationName]]-process-migration"
      ## KIE ProcessMigration Deployment config END
      ## KIE ProcessMigration ConfigMap BEGIN
      configMaps:
        - metadata:
            name: "[[.ApplicationName]]-process-migration"
          data:
            application.yaml: |-
              # Default pim configuration
              quarkus:
                class-loading:
                  removed-artifacts: com.oracle.database.jdbc:ojdbc8,com.ibm.db2:jcc,com.microsoft.sqlserver:mssql-jdbc
                package:
                  type: mutable-jar
                  user-providers-directory: providers
                http:
                  auth:
                    basic: true
                    policy:
                      main-policy:
                        roles-allowed: admin
                    permission:
                      main:
                        paths: /*
                        policy: main-policy
                      public:
                        paths: /q/health/*
                        policy: permit
                        methods: GET
                security:
                  users:
                    file:
                      realm-name: pim-file
                      enabled: true
                      plain-text: false
                      users: /opt/rhpam-process-migration/quarkus-app/config/application-users.properties
                      roles: /opt/rhpam-process-migration/quarkus-app/config/application-roles.properties
                  jdbc:
                    realm-name: pim-jdbc
                    enabled: true
                    principal-query:
                      sql: SELECT u.password, u.role FROM users u WHERE u.username=?
                  ldap:
                    realm-name:  pim-ldap
                    enabled: true
                    direct-verification: true
                    dir-context:
                      url: 'ldap://my-ldap.example.com:389'
                      principal: 'uid=admin,ou=system'
                      password: secret
                    identity-mapping:
                      rdn-identifier: uid
                      search-base-dn: 'ou=people,o=SevenSeas'
                      search-recursive: true
                    attribute-mappings:
                      "attribute-mappings":
                        from: cn
                        to: groups
                        filter: 'uniquemember={1}'
                        filter-base-dn: 'ou=groups,o=sevenSeas'  
                # Flyway to create PIM schema
                flyway:
                  connect-retries: 10
                  table: flyway_pim_history
                  migrate-at-start: true
                  baseline-on-migrate: true
                  baseline-version: 1.0
                  baseline-description: PimDB
                  sql-migration-prefix: postgresql
                # Quartz configuration
                quartz:
                  store-type: jdbc-cmt
                  start-mode: forced
                resteasy:
                  path: /rest
                datasource:
                  db-kind: postgresql
                  jdbc:
                    url: jdbc:postgresql://[[.ApplicationName]]-process-migration-postgresql:5432/pimdb
                  username: pim
                  password: [[$.DBPassword]]
                hibernate-orm:
                  database:
                    generation: validate
              pim:
                auth-method: file
              kieservers:
                #[[range $index, $Map := .ProcessMigration.KieServerClients]]
                - host: [[.Host]]
                  username: [[.Username]]
                  password: [[.Password]]
                #[[end]]
            application-users.properties: |-
              # set the following spec to autogenerated this file content, if you want to provide your own properties file
              # override this file's content.
              # spec:
              #  objects:
              #    processMigration:
              #      username: pimAdmin
              #      password: somePasswordThatWillBeConvertedToMD5
              # to generate password use:  echo -n "username:pim-file:password" | openssl md5
              # pim-file is the realm defined on the application.yaml config-map;
              [[.ProcessMigration.Username]]=[[.ProcessMigration.Password]]
            application-roles.properties: |-
              [[.ProcessMigration.Username]]=admin
      ## KIE ProcessMigration ConfigMap END
    ## KIE ProcessMigration END
